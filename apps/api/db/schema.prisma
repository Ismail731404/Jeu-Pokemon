// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Trainer {
  id              Int     @id @default(autoincrement())
  name            String
  gender          String
  activeTeam      PokemonTeam[] @relation("pokemonTeams")
  battleAttacking Battle[] @relation("attacking")
  battleOpposing  Battle[] @relation("opposing")
  User            User[]
}

model Battle {
  id                        Int     @id @default(autoincrement())
  attackingTrainer          Trainer @relation("attacking", fields: [attackingTrainerId], references: [id])
  attackingTrainerId        Int
  opposingTrainer           Trainer @relation("opposing", fields: [opposingTrainerId], references: [id])
  opposingTrainerId         Int
  attackerPokemonLifePoints Int
  opponentPokemonLifePoints Int
  winner                    Int
}

model Pokemon {
  id      Int    @id @default(autoincrement())
  pokedex Int
  name    String
  exp     Int
  level   Int
  //user    User   @relation(fields: [userId], references: [id])
  //userId  Int
  User    User?  @relation(fields: [userId], references: [id])
  userId  Int?
  team     PokemonOnPokemonTeams[]
}

model User {
  id              Int       @id @default(autoincrement())
  name            String
  pwd             String
  email           String
  inscriptionDate DateTime  @default(now())
  itemlist        Int?
  // trainer         Trainer   @relation(fields: [myTrainerId], references: [id])
  //myTrainerId     Int //id of trainer
  // Pokemon         Pokemon[]
  Trainer         Trainer?  @relation(fields: [trainerId], references: [id])
  trainerId       Int?
  Pokemon         Pokemon[]
  uniqueToken     String
  isValid         Boolean
  @@unique([email, pwd], name: "emailpwd")
}
model PokemonOnPokemonTeams {
    pokemon Pokemon @relation(fields: [pid], references: [id])
    pid Int
    pokemonTeam PokemonTeam @relation(fields: [pokemonTeamId], references: [teamId])
    pokemonTeamId Int

    @@id([pid, pokemonTeamId])
}



model PokemonTeam {
    teamId      Int @id @default(autoincrement())
    trainer     Trainer @relation("pokemonTeams" ,fields: [trainerId], references: [id])
    trainerId   Int
    pokemonList PokemonOnPokemonTeams[]
    //pokemonList Pokemon[]
}