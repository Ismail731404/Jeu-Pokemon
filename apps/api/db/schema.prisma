generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Trainer {
  id              Int          @id @default(autoincrement())
  name            String
  gender          String
  battleAttacking Battle[]     @relation("attacking")
  battleOpposing  Battle[]     @relation("opposing")
  activeTeam      PokemonTeam?
  User            User[]
}

model Battle {
  id                 Int     @id @default(autoincrement())
  attackingTrainerId Int
  opposingTrainerId  Int
  attackerPokemonId  Int
  opponentPokemonId  Int
  winner             Int
  attackingPokemon   Pokemon @relation("attackingPokemon", fields: [attackerPokemonId], references: [id])
  attackingTrainer   Trainer @relation("attacking", fields: [attackingTrainerId], references: [id])
  opposingPokemon    Pokemon @relation("opposingPokemon", fields: [opponentPokemonId], references: [id])
  opposingTrainer    Trainer @relation("opposing", fields: [opposingTrainerId], references: [id])
}

model Pokemon {
  id              Int                     @id @default(autoincrement())
  pokedex         Int
  name            String
  exp             Int
  level           Int
  userId          Int?
  battleAttacking Battle[]                @relation("attackingPokemon")
  battleOpposing  Battle[]                @relation("opposingPokemon")
  User            User?                   @relation(fields: [userId], references: [id])
  team            PokemonOnPokemonTeams[]
}

model User {
  id              Int       @id @default(autoincrement())
  name            String
  pwd             String
  email           String
  inscriptionDate DateTime  @default(now())
  itemlist        Int?
  trainerId       Int?
  isValid         Boolean
  uniqueToken     String
  Pokemon         Pokemon[]
  Trainer         Trainer?  @relation(fields: [trainerId], references: [id])

  @@unique([email, pwd], name: "emailpwd")
}

model PokemonOnPokemonTeams {
  pid           Int
  pokemonTeamId Int
  pokemon       Pokemon     @relation(fields: [pid], references: [id])
  pokemonTeam   PokemonTeam @relation(fields: [pokemonTeamId], references: [teamId])

  @@id([pid, pokemonTeamId])
}

model PokemonTeam {
  teamId      Int                     @id @default(autoincrement())
  trainerId   Int                     @unique
  pokemonList PokemonOnPokemonTeams[]
  trainer     Trainer                 @relation(fields: [trainerId], references: [id])
}
